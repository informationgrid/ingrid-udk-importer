<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.portalu.de/igc-profile" xmlns="http://www.portalu.de/igc-profile">

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
        ADAPT VERSION OF PROFILE FORMAT !
        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <xs:attributeGroup name="attributes.profile">
        <xs:attribute name="version" type="xs:string" fixed="1.0.0"/>
    </xs:attributeGroup>
    

    <!-- ==============================
        elements 
        ============================== -->
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
        profile
        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <xs:element name="profile">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name"/>
                <xs:element ref="supportedLanguages"/>
                <xs:element ref="layoutRubric" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attributeGroup ref="attributes.profile"/>
        </xs:complexType>
    </xs:element>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
        complex elements
        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <xs:element name="layoutRubric" type="LayoutRubric"/>
    <xs:element name="textControl" type="TextControl"/>
    <xs:element name="selectControl" type="SelectControl"/>
    <xs:element name="numberControl" type="NumberControl"/>    
    <xs:element name="dateControl" type="DateControl"/>
    <xs:element name="tableControl" type="TableControl"/>
    <xs:element name="legacyControl" type="LegacyControl"/>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
        "simple" elements
        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <xs:element name="name" type="xs:string"/>
    <xs:element name="supportedLanguages" type="xs:string"/>
    <xs:element name="id" type="xs:string"/>
    <xs:element name="localizedLabel" type="LocalizedString"/>
    <xs:element name="localizedLabelPostfix" type="LocalizedString"/>
    <!-- Help text contains TITLE, TEXT, and EXAMPLE and should be sparated by ## e.g. "TITLE##TEXT##EXAMPLE" -->
    <xs:element name="localizedHelp" type="LocalizedString"/>
    <!-- script contains mapping to csw -->
    <xs:element name="scriptedCswMapping" type="xs:string"/>
    <!-- script contains validation (e.g. mandatory, URL, number type ... ), visibility dependent from INSPIRE theme (including deletion of database content when hidden),
        visibility dependent from object class (including deletion of database content when hidden ?) etc. -->
    <xs:element name="scriptedProperties" type="xs:string"/>
    <!-- mandatory NOT scripted to be integrated in profile GUI (check box). Field is always shown if "true", "isVisible" then is irrelevant. -->
    <xs:element name="isMandatory" type="xs:boolean" default="false"/>
    <!-- visibility NOT scripted to be integrated in profile GUI (radio buttons). Only relevant if "isMandatory" is false. -->
    <xs:element name="isVisible" type="isVisibleType" default="optional"/>
    <xs:element name="indexName" type="xs:string"/>
    <xs:element name="selectionList" type="SelectionList"/>
    <xs:element name="layoutWidth" type="Percent" default="100"/>
    <xs:element name="layoutNumLines" type="xs:integer" default="1"/>


    <!-- ==============================
        types 
        ============================== -->

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
        complex types containing elements
        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- LayoutRubric: core or additional rubric, encapsulates controls -->
    <xs:complexType name="LayoutRubric">
        <xs:sequence>
            <xs:element ref="id"/>
            <!-- Label (heading) only relevant if not core rubric -->
            <xs:element ref="localizedLabel" minOccurs="0" maxOccurs="unbounded"/>
            <!-- Help only relevant if not core rubric -->
            <xs:element ref="localizedHelp" minOccurs="0" maxOccurs="unbounded"/>
            <!-- All controls encapsulated in this tag -->
            <xs:element name="controls">
                <xs:complexType>
                    <xs:sequence>
                        <!-- core controls always before additional controls -->
                        <xs:element ref="legacyControl" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="textControl"/>
                            <xs:element ref="selectControl"/>
                            <xs:element ref="numberControl"/>
                            <xs:element ref="dateControl"/>
                            <xs:element ref="tableControl"/>
                        </xs:choice>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <!-- Rubric part of core model (true) or not (false) -->
        <xs:attribute name="isLegacy" type="xs:boolean"/>
    </xs:complexType>

    <!-- AbstractControl: elements of all Controls -->
    <xs:complexType name="AbstractControl" abstract="true">
        <xs:sequence>
            <xs:element ref="id"/>
            <xs:element ref="isMandatory" minOccurs="0"/>
            <xs:element ref="isVisible" minOccurs="0"/>
            <xs:element ref="scriptedProperties" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    
    <!-- LegacyControl: existing Control in core model -->
    <xs:complexType name="LegacyControl">
        <xs:complexContent>
            <xs:extension base="AbstractControl"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- AbstractAdditionalControl: elemnts all additional Controls -->
    <xs:complexType name="AbstractAdditionalControl" abstract="true">
        <xs:complexContent>
            <xs:extension base="AbstractControl">
                <xs:sequence>
                    <xs:element ref="localizedLabel" maxOccurs="unbounded"/>
                    <xs:element ref="localizedLabelPostfix" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="localizedHelp" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="scriptedCswMapping" minOccurs="0"/>
                    <xs:element ref="indexName" minOccurs="0"/>
                    <xs:element ref="layoutWidth" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TextControl: additional text Control -->
    <xs:complexType name="TextControl">
        <xs:complexContent>
            <xs:extension base="AbstractAdditionalControl">
                <xs:sequence>
                    <xs:element ref="layoutNumLines" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- SelectControl: additional selection list Control -->
    <xs:complexType name="SelectControl">
        <xs:complexContent>
            <xs:extension base="AbstractAdditionalControl">
                <xs:sequence>
                    <xs:element ref="selectionList"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- NumberControl: additional number Control -->
    <xs:complexType name="NumberControl">
        <xs:complexContent>
            <xs:extension base="AbstractAdditionalControl">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- DateControl: additional date Control -->
    <xs:complexType name="DateControl">
        <xs:complexContent>
            <xs:extension base="AbstractAdditionalControl">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TableControl: additional table -->
    <xs:complexType name="TableControl">
        <xs:complexContent>
            <xs:extension base="AbstractAdditionalControl">
                <xs:sequence>
                    <xs:element ref="layoutNumLines" minOccurs="0"/>
                    <xs:element name="columns" type="Columns"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType> 
    <!-- Columns: possible Controls in columns -->
    <xs:complexType name="Columns">
        <xs:choice maxOccurs="unbounded">
            <xs:element ref="textControl"/>
            <xs:element ref="selectControl"/>
            <xs:element ref="numberControl"/>
            <xs:element ref="dateControl"/>
        </xs:choice>
    </xs:complexType>
    
    <!-- SelectionList: Additional selection list for textfield (may be extendable) -->
    <xs:complexType name="SelectionList">
            <xs:sequence>
            <xs:element name="items" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="item" type="StringWithId" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="lang" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <!-- also free entry of text possible (true) or not (false) -->
        <xs:attribute name="isExtendable" type="xs:boolean" default="false"/>
    </xs:complexType>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   
        "data" types, NOT containing elements
        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- %: 0 - 100 -->
    <xs:simpleType name="Percent">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="100"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- Lokalisierter String: STRING element mit lang-Attribut -->
    <xs:complexType name="LocalizedString">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="lang" type="xs:string" use="required"/>
            </xs:extension>     
        </xs:simpleContent>
    </xs:complexType>

    <!-- Id String: STRING element mit id-Attribut -->
    <xs:complexType name="StringWithId">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="xs:string" use="required"/>
            </xs:extension>     
        </xs:simpleContent>
    </xs:complexType>

    <!--
        Datentyp: Enumeration for element "isVisible"
    -->
    <xs:simpleType name="isVisibleType">
        <xs:restriction base="xs:token">
            <xs:enumeration value="optional"/>
            <xs:enumeration value="show"/>
            <xs:enumeration value="hide"/>
        </xs:restriction>
    </xs:simpleType>
    
</xs:schema>
